// index.js ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —á–∞—Ç–∞, –∫—Ä–æ–º–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
const express = require("express");
const admin = require("firebase-admin");

const app = express();
app.use(express.json());

// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase ===
const norm = (v) => (typeof v === "string" ? v.trim().replace(/^"|"$/g, "") : "");
const projectId = norm(process.env.FIREBASE_PROJECT_ID);
const clientEmail = norm(process.env.FIREBASE_CLIENT_EMAIL);
let privateKey = process.env.FIREBASE_PRIVATE_KEY;
if (privateKey) privateKey = norm(privateKey).replace(/\\n/g, "\n");

if (!projectId || !clientEmail || !privateKey) {
  console.error("‚ùå Missing Firebase ENV vars");
  process.exit(1);
}

admin.initializeApp({
  credential: admin.credential.cert({ projectId, clientEmail, privateKey }),
});
const db = admin.firestore();
const fcm = admin.messaging();

console.log("‚úÖ Firebase Admin initialized");

// === –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ===
const CHATS_COLLECTION = "Chats";
const MESSAGES_SUBCOLLECTION = "Messages";
const MAX_BATCH = 500;

// === –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞, –∫—Ä–æ–º–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ===
async function getTokensForChat(chatId, senderUid) {
  try {
    const chatRef = db.collection(CHATS_COLLECTION).doc(chatId);
    const chatSnap = await chatRef.get();

    if (!chatSnap.exists) {
      console.log("‚ö†Ô∏è –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:", chatId);
      return [];
    }

    const chatData = chatSnap.data();
    const participants = chatData.participants || [];
    const recipients = participants.filter((uid) => uid !== senderUid);

    if (recipients.length === 0) {
      console.log("‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–≤—Å–µ ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å)");
      return [];
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const tokens = [];
    for (const uid of recipients) {
      const userSnap = await db.collection("Users").doc(uid).get();
      if (userSnap.exists) {
        const userData = userSnap.data();
        if (userData.token) {
          tokens.push(userData.token);
        }
      }
    }

    console.log(`üéØ –ü–æ–ª—É—á–µ–Ω–æ ${tokens.length} —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
    return tokens;
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤:", err);
    return [];
  }
}
